beginModule "Demo";

File.import "../Semantics/Tp.ist";
File.import "../Semantics/Tm.ist";

openModule /Tp/;
openModule /Tm/;

lemma "demo"
/
    forall 
        (M : intersect i . PhaseSig i)
        (G : intersect i . Glue.GLUE_CM M i) 
        (L : `SynM M -> intersect i . Sig i) .
    forall (i : level) . 
    unit 
/;
intro /M G L i/.
infer /`TP M G L i/ /Tp/.
unfold /TP in Tp/.
unfold /TP_Sem in Tp/.
(* unfold /Ext.S' in Tp at all/. *)
(* unfold /Ext.S in Tp at all/. *)
(* unfold /Ext.Ext' in Tp at all/. *)
(* unfold /Ext.t in Tp at all/.  *)

infer /`TM M G L i/ /Tm/.
unfold /TM_Ext in Tm/.
unfold /Ext.wk in Tm/.
unfold /TM in Tm/.

auto.
qed ();

endModule ();

